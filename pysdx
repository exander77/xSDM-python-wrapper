#!/usr/bin/python
import os
import sys
import requests
from BeautifulSoup import BeautifulSoup
from subprocess import call
from urlparse import urlparse

def download(url, filename):
    r = requests.get(url, stream=True)
    size = 0
    with open(filename, 'ab') as f:
        for chunk in r.iter_content(chunk_size=1024): 
            if chunk:
                size += len(chunk)
                f.write(chunk)
                f.flush()
    return size

def get(soup, name, index):
    element = soup.find('input', {'id': name + str(index)});
    if element == None:
        return None;
    return element['value'];

if len(sys.argv) < 2:
    print >> sys.stderr, "Usage: pysdx some_file.sdx"
    sys.exit(1) 

with open(sys.argv[1], 'r') as sdxFile:
    sdxUrl = sdxFile.read()
    sdxUrlContent = requests.get(sdxUrl).text
    soup = BeautifulSoup(sdxUrlContent)
  
    sdxUrlParsed = urlparse(sdxUrl)
    domain = '{uri.netloc}'.format(uri=sdxUrlParsed)

    offeringNameForRequest = None
    itemId = 1;
    dlSelectLast = None
    while True:
        dlSelect = get(soup, 'dlSelect', itemId); 
        offeringNameForRequest = get(soup, 'offeringNameForRequest', itemId); 
        if dlSelect != None:
            print "Product: {0}".format(offeringNameForRequest)
            dlSelectLast = dlSelect
            itemId = itemId + 1;
        else:
            break;

    print ''

    itemId = 1
    while True:
        oiopu = get(soup, 'oiopu', itemId); 
        fileID = get(soup, 'fileID', itemId); 
        oiop = get(soup, 'oiop', itemId); 
        fileUrl = get(soup, 'fileUrl', itemId);
        if oiopu != None:
            multipart = 0
            fileUrlSplit = fileUrl.split('/')
            partName = fileName = fileUrlSplit[-1]
            name, ext = os.path.splitext(fileName)
            name2, ext2 = os.path.splitext(name)
            
            if ext2 == ".01": 
                print "Multiple parts"
                multipart = 1
                fileName = name2 + ext
            
            print "{0}. Download: {1}".format(itemId, fileName)
            url = "http://{0}/WebStore/Account/SDMAuthorize.ashx?oiopu={1}&f={2}&oiop={3}&dl={4}".format(domain, oiopu, fileID, oiop, dlSelectLast);
            print url
            urlContent = requests.get(url).text
            soup2 = BeautifulSoup(urlContent)
            edvElement = soup2.find('edv')
            if edvElement == None:
                print >> sys.stderr, "ERROR: Expired or other error."
            else:
                edv = edvElement.next
                
                question = raw_input('Download Y/n? ');
                if question == "" or question == "Y" or question == "y":

                    with open(fileName + ".key", "w") as keyFile:
                        keyFile.write(edv)        
                    
                    if os.path.isfile(fileName):
                        os.remove(fileName)
                   
                    count = 1
                    print "\tFile: {0}".format(fileName)
                    print "\tPart({0}): {1}".format(count, partName)
                    size = lastSize = download(fileUrl, fileName)

                    while size == lastSize:
                        lastSize = size
                        count = count + 1
                        partName = fileUrlSplit[-1] = "{0}.0{1}{2}".format(name2, count, ext)
                        print "\tPart({0}): {1}".format(count, partName)
                        size = download('/'.join(fileUrlSplit), fileName) 

                    question = raw_input('Extract Y/n? ');
                    if question == "" or question == "Y" or question == "y":
                        call(["xsdm", fileName])                

            itemId = itemId + 1;
        else:
            break;
